(function() {
    var type_impls = Object.fromEntries([["m5dial_bsp",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DisplayConfiguration%3CDELAY%3E-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"impl\"><a href=\"#impl-DisplayConfiguration%3CDELAY%3E-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D, DELAY&gt; DisplayConfiguration&lt;DELAY&gt; for Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,\n    DELAY: DelayNs,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_rotation\" class=\"method trait-impl\"><a href=\"#method.set_rotation\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">set_rotation</a>(&amp;mut self, rot: DisplayRotation) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set display rotation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init\" class=\"method trait-impl\"><a href=\"#method.init\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">init</a>(&amp;mut self, delay: &amp;mut DELAY) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Initialise and clear the display in graphics mode.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = DisplayError</h4></section></summary><div class='docblock'>The type representing errors that may occur during display configuration.</div></details></div></details>","DisplayConfiguration<DELAY>","m5dial_bsp::bsp::M5DialDisplay"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DrawTarget-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"impl\"><a href=\"#impl-DrawTarget-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D&gt; DrawTarget for Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Color\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Color\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Color</a> = Rgb565</h4></section></summary><div class='docblock'>The pixel color type the targetted display supports.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = DisplayError</h4></section></summary><div class='docblock'>Error type to return when a drawing operation fails. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.draw_iter\" class=\"method trait-impl\"><a href=\"#method.draw_iter\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">draw_iter</a>&lt;O&gt;(\n    &amp;mut self,\n    pixels: O,\n) -&gt; Result&lt;(), &lt;Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt; as DrawTarget&gt;::Error&gt;<div class=\"where\">where\n    O: IntoIterator&lt;Item = Pixel&lt;&lt;Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt; as DrawTarget&gt;::Color&gt;&gt;,</div></h4></section></summary><div class='docblock'>Draw individual pixels to the display without a defined order. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_contiguous\" class=\"method trait-impl\"><a href=\"#method.fill_contiguous\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fill_contiguous</a>&lt;I&gt;(\n    &amp;mut self,\n    area: &amp;Rectangle,\n    colors: I,\n) -&gt; Result&lt;(), Self::Error&gt;<div class=\"where\">where\n    I: IntoIterator&lt;Item = Self::Color&gt;,</div></h4></section></summary><div class='docblock'>Fill a given area with an iterator providing a contiguous stream of pixel colors. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill_solid\" class=\"method trait-impl\"><a href=\"#method.fill_solid\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">fill_solid</a>(\n    &amp;mut self,\n    area: &amp;Rectangle,\n    color: Self::Color,\n) -&gt; Result&lt;(), Self::Error&gt;</h4></section></summary><div class='docblock'>Fill a given area with a solid color. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a href=\"#method.clear\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">clear</a>(&amp;mut self, color: Self::Color) -&gt; Result&lt;(), Self::Error&gt;</h4></section></summary><div class='docblock'>Fill the entire display with a solid color. <a>Read more</a></div></details></div></details>","DrawTarget","m5dial_bsp::bsp::M5DialDisplay"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"impl\"><a href=\"#impl-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D&gt; Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Clear the display buffer\nNOTE: Must use <code>flush</code> to apply changes</p>\n</div></details><section id=\"method.fill\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">fill</a>(&amp;mut self, color: u16)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">flush</a>(&amp;mut self) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Write the display buffer</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_pixels\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_pixels</a>&lt;T&gt;(\n    &amp;mut self,\n    start: (u16, u16),\n    end: (u16, u16),\n    colors: T,\n) -&gt; Result&lt;(), DisplayError&gt;<div class=\"where\">where\n    T: IntoIterator&lt;Item = u16&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Set the pixels</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.\nThis method may return an error if there are an out of bounds error.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_pixel\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_pixel</a>(&amp;mut self, x: u32, y: u32, value: u16)</h4></section></summary><div class=\"docblock\"><p>Set a pixel color. If the X and Y coordinates are out of the bounds\nof the display, this method call is a noop</p>\n</div></details></div></details>",0,"m5dial_bsp::bsp::M5DialDisplay"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Gc9a01%3CI,+D,+M%3E\" class=\"impl\"><a href=\"#impl-Gc9a01%3CI,+D,+M%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D, M&gt; Gc9a01&lt;I, D, M&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_buffered_graphics\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_buffered_graphics</a>(self) -&gt; Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Convert the display into a buffered graphics mode, supporting\n<a href=\"https://crates.io/crates/embedded-graphics\">embedded-graphics</a>.</p>\n<p>More information about [<code>BufferedGraphics</code>]</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.init_with_addr_mode\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">init_with_addr_mode</a>(\n    &amp;mut self,\n    delay: &amp;mut impl DelayNs,\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Initialise the screen in one of the available addressing modes.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.draw\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">draw</a>(&amp;mut self, buffer: &amp;[u8]) -&gt; Result&lt;(), DisplayError&gt;</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: Use <code>draw_buffer</code> instead</span></div></span></summary><div class=\"docblock\"><p>Send a raw buffer to the screen.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.draw_buffer\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">draw_buffer</a>(&amp;mut self, buffer: &amp;[u16]) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Send a raw buffer to the screen.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bounded_draw\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">bounded_draw</a>(\n    &amp;mut self,\n    buffer: &amp;[u16],\n    disp_width: usize,\n    upper_left: (u16, u16),\n    lower_right: (u16, u16),\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Send the data to the display for drawing at the current position in the framebuffer\nand advance the position accordingly. Ref. <code>set_draw_area</code> to modify the affected area by\nthis method.</p>\n<h5 id=\"notes\"><a class=\"doc-anchor\" href=\"#notes\">ยง</a>Notes</h5>\n<p>This method takes advantage of the bounding box for faster writes. Meaning, it will\nsplit into chuncks of write operations.</p>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_fit_custom_stack\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_fit_custom_stack</a>&lt;const CLEAR_SIZE_STACK: usize&gt;(\n    &amp;mut self,\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Clears the screen by sending a zeroed buffer using a custom stack size for allocation.</p>\n<p>This function uses a stack-allocated buffer of size <code>CLEAR_SIZE_STACK</code> to send\na portion of the screen-clearing data to the display. The full display area is divided\ninto smaller chunks of size <code>CLEAR_SIZE_STACK</code>, which are then sent iteratively to avoid\nallocating large amounts of memory on the stack in one go.</p>\n<p>This function uses <code>set_draw_area</code>.</p>\n<h5 id=\"type-parameters\"><a class=\"doc-anchor\" href=\"#type-parameters\">ยง</a>Type Parameters</h5>\n<ul>\n<li><code>CLEAR_SIZE_STACK</code>: The size of the stack-allocated buffer used to send each chunk of data\nto the display. This value determines the number of zeroed <code>u16</code> values sent per iteration.</li>\n</ul>\n<h5 id=\"errors-4\"><a class=\"doc-anchor\" href=\"#errors-4\">ยง</a>Errors</h5>\n<p>This method returns an error if there are communication issues while sending the data\nto the display.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">ยง</a>Panics</h5>\n<p>This method will stackoverflow if the value of <code>CLEAR_SIZE_STACK</code> exceeds the remaining available stack space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_fit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear_fit</a>(&amp;mut self) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Clears the screen by sending a zeroed buffer using a default stack size.</p>\n<p>This method sends zeroed <code>u16</code> values to the display in chunks to clear the entire screen.\nIt uses a default stack allocation size of 32 <code>u16</code> values (64 bytes) per iteration,\nmaking it suitable for most small embedded contexts where stack space is limited.</p>\n<p>If you need to customize the size of the stack-allocated buffer, use\n[<code>clear_fit_custom_stack</code>] with a specific stack size.</p>\n<p>This function uses <code>set_draw_area</code>.</p>\n<h5 id=\"errors-5\"><a class=\"doc-anchor\" href=\"#errors-5\">ยง</a>Errors</h5>\n<p>This method returns an error if there are communication issues while sending the data\nto the display.</p>\n<h5 id=\"notes-1\"><a class=\"doc-anchor\" href=\"#notes-1\">ยง</a>Notes</h5>\n<p>The default stack allocation size is 64 bytes (32 <code>u16</code> values).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_display_rotation\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_display_rotation</a>(\n    &amp;mut self,\n    rotation: DisplayRotation,\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the screen rotation.</p>\n<h5 id=\"errors-6\"><a class=\"doc-anchor\" href=\"#errors-6\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_brightness\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_brightness</a>(\n    &amp;mut self,\n    brightness: Brightness,\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Change the display brightness.</p>\n<h5 id=\"errors-7\"><a class=\"doc-anchor\" href=\"#errors-7\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_screen_state\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_screen_state</a>(&amp;mut self, on: Logical) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set hardware screen state</p>\n<h5 id=\"errors-8\"><a class=\"doc-anchor\" href=\"#errors-8\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_invert_pixels\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_invert_pixels</a>(&amp;mut self, value: bool) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set hardware to inverse the GDDRAM framebuffer output</p>\n<h5 id=\"errors-9\"><a class=\"doc-anchor\" href=\"#errors-9\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_draw_area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_draw_area</a>(\n    &amp;mut self,\n    start: (u16, u16),\n    end: (u16, u16),\n) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set hardware framebuffer to configure a limited area\nof the screen where any pixel should be draw.</p>\n<ul>\n<li>(<code>x_start</code>, <code>y_start</code>) - starting point</li>\n<li>(<code>x_end</code>, <code>y_end</code>) - ending point</li>\n</ul>\n<h5 id=\"errors-10\"><a class=\"doc-anchor\" href=\"#errors-10\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_write_mode\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">set_write_mode</a>(&amp;mut self) -&gt; Result&lt;(), DisplayError&gt;</h4></section></summary><div class=\"docblock\"><p>Set the hardware framebuffer to await incoming colors</p>\n<h5 id=\"errors-11\"><a class=\"doc-anchor\" href=\"#errors-11\">ยง</a>Errors</h5>\n<p>This method may return an error if there are communication issues with the display.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_screen_rotation\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">get_screen_rotation</a>(&amp;self) -&gt; DisplayRotation</h4></section></summary><div class=\"docblock\"><p>Get screen rotation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dimensions\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">dimensions</a>(&amp;self) -&gt; (u16, u16)</h4></section></summary><div class=\"docblock\"><p>Get pixel screen dimensions</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bounds\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">bounds</a>(&amp;self) -&gt; (u16, u16)</h4></section></summary><div class=\"docblock\"><p>Get pixel screen bounds (x-1, y-1)</p>\n</div></details></div></details>",0,"m5dial_bsp::bsp::M5DialDisplay"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Gc9a01%3CI,+D,+M%3E\" class=\"impl\"><a href=\"#impl-Gc9a01%3CI,+D,+M%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D, M&gt; Gc9a01&lt;I, D, M&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.reset\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">reset</a>&lt;RST, DELAY&gt;(\n    &amp;mut self,\n    rst: &amp;mut RST,\n    delay: &amp;mut DELAY,\n) -&gt; Result&lt;(), &lt;RST as ErrorType&gt;::Error&gt;<div class=\"where\">where\n    RST: OutputPin,\n    DELAY: DelayNs,</div></h4></section></summary><div class=\"docblock\"><p>Reset the display.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">ยง</a>Errors</h5>\n<p>See <code>OutputPin</code> definition for more information.</p>\n</div></details></div></details>",0,"m5dial_bsp::bsp::M5DialDisplay"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OriginDimensions-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"impl\"><a href=\"#impl-OriginDimensions-for-Gc9a01%3CI,+D,+BufferedGraphics%3CD%3E%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;I, D&gt; OriginDimensions for Gc9a01&lt;I, D, BufferedGraphics&lt;D&gt;&gt;<div class=\"where\">where\n    I: WriteOnlyDataCommand,\n    D: DisplayDefinition,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size\" class=\"method trait-impl\"><a href=\"#method.size\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a class=\"fn\">size</a>(&amp;self) -&gt; Size</h4></section></summary><div class='docblock'>Returns the size of the bounding box.</div></details></div></details>","OriginDimensions","m5dial_bsp::bsp::M5DialDisplay"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[20797]}